void myInit(void);
void myDisplay(void);
void setPixel(int x, int y) { 
	glBegin(GL_POINTS);  
	glVertex2i(x, y); 
	glEnd();  glFlush(); }

void draw_circle(int p, int q, int x, int y) { 
	glColor3f(1, 0, 0);  
	setPixel(x + p, y + q);
	glColor3f(0, 1, 0);
	setPixel(x - p, y + q); 
	glColor3f(0, 0, 1);  
	setPixel(x + p, y - q);  
	glColor3f(0, 0, 1);  
	setPixel(x - p, y - q);  
	glColor3f(1, 0, 0); 
	setPixel(x + q, y + p);  
	glColor3f(0, 0, 1);  
	setPixel(x - q, y + p);  
	glColor3f(1, 0, 0);  
	setPixel(x + q, y - p);
	glColor3f(1, 0.5, 1); 
	setPixel(x - q, y - p); 
}

void bresenham() {
	int d, r = 100, p = 0, q = r, x = 200, y = 200; 
	d = 3 - 2 * r;    
	draw_circle(p, q, x, y);  
	while (p <= q) {
		p++;   if (d < 0)

		{ d = d + (4 * p) + 6; }
		else { q--;    d = d + 4 * (p - q) + 10; }   draw_circle(p, q, x, y);
	}
}

void main(int argc, char** argv) { 
	glutInit(&argc, argv);  
	glutInitDisplayMode(GLUT_SINGLE | GLUT_RGB);  
	glutInitWindowSize(600, 600); 
	glutInitWindowPosition(0, 0); 
	glutCreateWindow("Bresenham's faraz circle");  
	glutDisplayFunc(myDisplay); 
	myInit(); 
	glutMainLoop(); 
} void myInit(void)
{
	glClearColor(1.0, 1.0, 1.0, 1.0);
	gluOrtho2D(0, 600, 0, 600); }
void myDisplay(void) 
{ glClear(GL_COLOR_BUFFER_BIT);  
glPointSize(10);  
bresenham();  
glEnd(); 
glFlush(); 
}
